local a = require('rmarganti.colors.abstractions')

return {
    -- TSAnnotation = {},
    -- TSBoolean = { fg = a.base },
    -- TSConditional = { fg = a.base },
    -- TSConstBuiltin = { fg = a.base },
    -- TSConstMacro = { fg = a.base },
    -- TSConstant = { fg = a.plus1 },
    TSConstructor = { fg = a.plus3 },
    -- TSCurrentScope = {},
    -- TSDefinition = {},
    -- TSDefinitionUsage = {},
    -- TSEmphasis = {},
    TSError = { fg = a.error }, -- For syntax/parser errors.
    -- TSException = { fg = a.base },
    TSField = { fg = a.plus2 },
    -- TSFloat = { fg = a.base },
    TSFuncBuiltin = { fg = a.plus2 },
    -- TSFuncMacro = { fg = a.base },
    TSFunction = { fg = a.plus2 },
    TSInclude = { fg = a.base },
    -- TSKeyword = { fg = a.base },
    -- TSKeywordFunction = { fg = a.base },
    -- TSLabel = { fg = a.base },
    TSLiteral = { fg = a.plus1 },
    TSMethod = { fg = a.plus2 },
    TSNamespace = { fg = a.plus3 },
    -- TSNumber = { fg = a.base },
    -- TSOperator = { fg = a.base },
    -- TSParameter = { fg = a.base },
    -- TSParameterReference = { fg = a.base_high },
    TSProperty = { fg = a.base },
    TSPunctBracket = { fg = a.base },
    TSPunctDelimiter = { fg = a.base },
    TSPunctSpecial = { fg = a.base },
    -- TSRepeat = { fg = a.base },
    -- TSString = { fg = a.base },
    -- TSStringEscape = { fg = a.base },
    -- TSStringRegex = { fg = a.base },
    -- TSStrong = {},
    -- TSStructure = { fg = a.base },
    -- TSSymbol = { fg = a.base},
    TSTag = { fg = a.plus3 }, -- Tags like html tag names.
    TSTagAttribute = { fg = a.plus2 }, -- Tag delimiter like `<` `>` `/`
    TSTagDelimiter = { fg = a.base }, -- Tag delimiter like `<` `>` `/`
    -- TSText = {},
    -- TSTitle = {},
    -- TSType = { fg = a.base },
    -- TSTypeBuiltin = { fg = a.base },
    -- TSURI = {},
    -- TSUnderline = {},
    TSVariable = { fg = a.plus3 },
    TSVariableBuiltin = { fg = a.plus3 },
}
