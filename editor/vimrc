"---------------------------------------------------------------
"
" Plugins
"
"---------------------------------------------------------------

source ~/.vim/plugins.vim


"---------------------------------------------------------------
"
" Theme
"
"---------------------------------------------------------------

syntax enable
set background=dark
colorscheme nord

" Always show tab bar
set showtabline=2

" Always show status bar
set laststatus=2


"---------------------------------------------------------------
"
" General Settings
"
"---------------------------------------------------------------

" Show menus in UTF-8
set encoding=utf-8

" Set to auto read when a file is changed from the outside
set autoread

" Make backspace behave like every other editor.
set backspace=indent,eol,start

" Change leader key to spacebar.
nnoremap <SPACE> <Nop>
let mapleader = ' '

" Show line numbers.
set number

" Allow modified buffers to be hidden.
set hidden

" Don't show status in ex command line,
" since we'll show it in lightline.
set noshowmode

" Enhanced tab-completion for commands.
set wildmenu

" Ignore compiled files, etc.
set wildignore=*.o,*~,*.pyc
if has("win16") || has("win32")
    set wildignore+=.git\*,.hg\*,.svn\*
else
    set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/.DS_Store
endif

" Don't wrap lines.
set nowrap

" Disable backups, swaps, etc.
set nobackup
set noswapfile

" Update UI more often.
set updatetime=300

" Make sure vim sees *.md files as Markdown.
autocmd BufNewFile,BufRead *.md set filetype=markdown

" Preview %s commands as you type them.
if has('nvim')
    set inccommand=nosplit
endif


"---------------------------------------------------------------
"
" Text search, tabs, indents
"
"---------------------------------------------------------------

" Highlight Search
set hlsearch

" Incremental Search
set incsearch

" Show existing tab with 4 spaces width
set tabstop=4

" When indenting with '>', use 4 spaces width
set shiftwidth=4

" On pressing tab, insert 4 spaces
set expandtab

" Be smart, obviously.
set smarttab

" Auto indent, smart indent
set ai
set si


"---------------------------------------------------------------
"
" Splits
"
"---------------------------------------------------------------

" Make splits default to below...
set splitbelow

" And to the right. This feels more natural.
set splitright

" We'll set simpler mappings to switch between splits.
nmap <C-J> <C-W><C-J>
nmap <C-K> <C-W><C-K>
nmap <C-H> <C-W><C-H>
nmap <C-L> <C-W><C-L>


"---------------------------------------------------------------
"
" Mappings
"
"---------------------------------------------------------------

" Collection of mnemonic keyboard shorcuts.
source ~/.vim/mnemonics.vim

" Add simple highlight removal.
nmap <Leader><space> :nohlsearch<cr>

" Use Ranger if the binary is available; otherwise, use NERDTree.
if executable('ranger')
    nmap <Leader>` :Ranger<cr>

    "  open ranger when vim open a directory
    let g:NERDTreeHijackNetrw = 0
    let g:ranger_replace_netrw = 1
else
    nmap <Leader>` :NERDTreeToggle<cr>
endif

" Move a line of text using Ctrl+Shift+j/k
nmap <C-S-j> mz:m+<cr>`z
nmap <C-S-k> mz:m-2<cr>`z
vmap <C-S-j> :m'>+<cr>`<my`>mzgv`yo`z
vmap <C-S-k> :m'<-2<cr>`>my`<mzgv`yo`z


"---------------------------------------------------------------
"
" Auto Commands
"
"---------------------------------------------------------------

" Automatically source the `.vimrc`, `mnemonics.vim`,
" and `plugins.vim` files on save.
augroup autosourcing
   autocmd!
   autocmd BufWritePost .vimrc source %
   autocmd BufWritePost plugins.vim source %
   autocmd BufWritePost mnemonics.vim source %
augroup END

" Highlight current line in the current window.
augroup CursorLine
  au!
  au VimEnter,WinEnter,BufWinEnter * setlocal cursorline
  au WinLeave * setlocal nocursorline
augroup END

" Automatically resize windows when the host
" window size changes. Useful for tmux zooms.
autocmd VimResized * wincmd =
